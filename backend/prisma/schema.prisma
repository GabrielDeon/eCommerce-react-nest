// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tb_user {
  id         String      @id @default(uuid())
  username   String      @db.VarChar(50)
  email      String      @unique @db.VarChar(255)
  password   String
  role       Role        @default(USER)
  created_on DateTime    @default(now())
  deleted_at DateTime?
  reviews    tb_review[]
  carts      tb_cart[]
}

enum Role {
  USER
  ADMIN
}

enum Status {
  ACTIVE
  CHECKEDOUT
  ABANDONED
}

model tb_category {
  id         String       @id @default(uuid())
  name       String       @unique @db.VarChar(100)
  deleted_at DateTime?
  products   tb_product[]
}

model tb_size {
  id                  String                 @id @default(uuid())
  size_name           String                 @unique @db.VarChar(30)
  deleted_at          DateTime?
  variations_products tb_product_variation[]
}

model tb_color {
  id                  String                 @id @default(uuid())
  color_name          String                 @unique @db.VarChar(45)
  color_code          String
  deleted_at          DateTime?
  variations_products tb_product_variation[]
}

model tb_product {
  id                  String                 @id @default(uuid())
  id_category         String
  category            tb_category            @relation(fields: [id_category], references: [id])
  product_name        String                 @unique @db.VarChar(100)
  short_description   String                 @db.VarChar(50)
  description         String                 @db.VarChar(500)
  base_price          Decimal                @db.Decimal(12, 2)
  discount_percentage Decimal?               @default(0) @db.Decimal(5, 2)
  final_price         Decimal                @db.Decimal(12, 2)
  tags                String                 @db.VarChar(30)
  image_1             String                 @db.VarChar(255)
  image_2             String?                @db.VarChar(255)
  image_3             String?                @db.VarChar(255)
  image_4             String?                @db.VarChar(255)
  created_on          DateTime               @default(now())
  updated_at          DateTime               @updatedAt
  deleted_at          DateTime?
  product_variations  tb_product_variation[]
  reviews             tb_review[]

  @@index([id])
  @@index([product_name])
  @@index([base_price])
  @@index([final_price])
}

model tb_product_variation {
  id                  String         @id @default(uuid())
  id_product          String
  id_size             String?
  id_color            String?
  product             tb_product     @relation(fields: [id_product], references: [id])
  size                tb_size?       @relation(fields: [id_size], references: [id])
  color               tb_color?      @relation(fields: [id_color], references: [id])
  stock               Int
  SKU                 String         @unique @db.VarChar(7)
  base_price          Decimal        @db.Decimal(12, 2)
  discount_percentage Decimal?       @default(0) @db.Decimal(5, 2)
  final_price         Decimal        @db.Decimal(12, 2)
  updated_at          DateTime       @updatedAt
  deleted_at          DateTime?
  cart_item           tb_cart_item[]

  @@unique([id_product, id_size, id_color])
  @@index([final_price])
  @@index([id_product])
  @@index([id_size])
  @@index([id_color])
}

model tb_review {
  id          String     @id @default(uuid())
  id_user     String
  user        tb_user    @relation(fields: [id_user], references: [id])
  id_product  String
  product     tb_product @relation(fields: [id_product], references: [id])
  rating      Decimal    @db.Decimal(2, 1)
  review_text String?    @db.Text
  created_at  DateTime   @default(now())
  deleted_at  DateTime?

  @@unique([id_user, id_product])
  @@index([id_product])
}

model tb_cart {
  id         String         @id @default(uuid())
  id_user    String
  user       tb_user        @relation(fields: [id_user], references: [id])
  created_at DateTime       @default(now())
  deleted_at DateTime?
  status     Status?        @default(ACTIVE)
  cart_itens tb_cart_item[]
  bill       tb_bill[]

  @@index([id_user])
}

model tb_cart_item {
  id                   String               @id @default(uuid())
  id_cart              String
  id_product_variation String
  quantity             Int
  price_at_addition    Decimal              @db.Decimal(12, 2)
  cart                 tb_cart              @relation(fields: [id_cart], references: [id])
  product_variation    tb_product_variation @relation(fields: [id_product_variation], references: [id])
  updated_at           DateTime             @updatedAt
  deleted_at           DateTime?

  @@index([id_cart])
}

model tb_bill {
  id             String    @id @default(uuid())
  id_cart        String
  cart           tb_cart   @relation(fields: [id_cart], references: [id])
  first_name     String    @db.VarChar(50)
  last_name      String    @db.VarChar(50)
  company_name   String?   @db.VarChar(100)
  zip_code       String    @db.VarChar(20)
  country_region String    @db.VarChar(100)
  street_address String    @db.VarChar(255)
  city_town      String    @db.VarChar(100)
  province       String    @db.VarChar(100)
  address_line_2 String?   @db.VarChar(255)
  email_address  String    @db.VarChar(255)
  created_at     DateTime  @default(now())
  deleted_at     DateTime?

  @@index([id_cart])
}
